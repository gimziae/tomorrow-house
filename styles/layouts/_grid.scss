/*
    * MOBILE ( < 768px ) ------------------------
    * fixture ...........small
    * of colums .........4
    * gutter ............20px
    * margin ............5px
    * container-size ....100% - (5px * 2)

    * TABLET ( 768px <= ) ------------------------
    * fixture ...........medium
    * of colums .........12
    * gutter ............20px
    * margin ............30px
    * container-size ....100% - (30px * 2)
    * max-container .....960px

    * DESKTOP ( 1200px <= ) ---------------------
    * fixture ...........large
    * of colums .........12
    * gutter ............20px
    * unit ..............75px
    * margin ............auto
    * container-size ....1140px
    * max-container .....1140px
*/

$gutter: 20px;

// small
$sm-columns: 4;
$sm-margin: 5px;

// mideum
$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + ($md-margin * 2);

// large
$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
    width: 100%;
    padding: 0 $sm-margin;
    margin: 0 auto;
    .row {
        display: flex;
        flex-wrap: wrap; // 자기자신의 너비를 보존하기 위해
    }

    // ^= : col- 로 시작하는 클래스를 선택!
    [class^="col-"] {
        padding: 0 ($gutter / 2);
    }

    // mobile
    @for $i from 1 through $sm-columns {
        .col-sm-#{$i} {
            width: $i / $sm-columns * 100%;
        }
    }

    // tablet
    @include responsive(T) {
        max-width: $md-max-container;
        padding: 0 $md-margin;
        @for $i from 1 through $md-columns {
            .col-md-#{$i} {
                width: $i / $md-columns * 100%;
            }
        }
    }

    // desktop
    @include responsive(D) {
        max-width: $lg-max-container;
        padding: 0;
        @for $i from 1 through $lg-columns {
            .col-lg-#{$i} {
                width: ($lg-unit + $gutter) * $i;
            }
        }
    }
}
